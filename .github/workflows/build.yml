name: Test SCCache Artifact

on:
  workflow_dispatch:

jobs:
  download-sccache:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install SCCache (Mozilla Action)
        uses: mozilla/sccache-action@v0.0.9

      - name: Download custom SCCache Artifact
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COMMIT: a888c16ff2be03c9e7e99f8431186985587cf5b2
          RUN_ID: 18143591494
          SCCACHE_PATH: ${{ env.SCCACHE_PATH }}
        run: |
          echo "Downloading custom SCCache artifact to overwrite the official one..."
          
          # Detect architecture
          if [[ "${{ runner.arch }}" == "X64" ]]; then ARCH_ID="x86_64"; fi
          if [[ "${{ runner.arch }}" == "ARM64" ]]; then ARCH_ID="aarch64"; fi

          # Detect OS
          case "${{ runner.os }}" in
            Linux) OS_ID="unknown-linux-musl" ;;
            macOS) OS_ID="apple-darwin" ;;
            Windows) OS_ID="pc-windows-msvc" ;;
          esac

          ARTIFACT_NAME="sccache-$COMMIT-$ARCH_ID-$OS_ID"
          echo "Looking for artifact: $ARTIFACT_NAME"

          ARTIFACT_URL=$(curl -sSL -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/mozilla/sccache/actions/runs/$RUN_ID/artifacts" \
            | jq -r --arg NAME "$ARTIFACT_NAME" '.artifacts[] | select(.name==$NAME) | .archive_download_url')

          if [[ -z "$ARTIFACT_URL" ]]; then
            echo "Artifact not found!"
            exit 1
          fi

          echo "Downloading $ARTIFACT_URL ..."
          curl -L -H "Authorization: Bearer $GITHUB_TOKEN" -o sccache.zip "$ARTIFACT_URL"
          unzip -o sccache.zip -d sccache-bin

          # Detect SCCACHE binary in our artifact
          SCCACHE_BIN=$(ls sccache-bin | grep sccache)

          # On Windows, append .exe if missing
          if [[ "${{ runner.os }}" == "Windows" ]] && [[ "$SCCACHE_BIN" != *.exe ]]; then
            SCCACHE_BIN="$SCCACHE_BIN.exe"
          fi

          # Overwrite the SCCACHE_PATH provided by the action
          mv "sccache-bin/$SCCACHE_BIN" "$SCCACHE_PATH"
          chmod +x "$SCCACHE_PATH"
          echo "Custom SCCache installed at $SCCACHE_PATH"
          "$SCCACHE_PATH" --version
